Questions:

Aufgabe 1:

- Die Funktion gettimeofday() kann Sekunden und Microsekunden der derzeitigen Zeit angeben
- Eine Operation muss mindestens 1 - 10 Microsekunden lang laufen, damit man diese gescheit angeben kann


Aufgabe 2:


- siehe tlb.c


Aufgabe 3:

- siehe tlb.sh
- Man kann nicht nur 1 Trial und 1 Page machen -> Keine guten Messergebnisse (0 ns)

an851goe@ct-bsys-ws20-18:~/z-drive/BSYS2020/Chapter19$ ./tlb.sh 1 20
NEUE ITERATION
1
20
Number of Pages 1
Number of Iterations 20
tlbAccessTime: 947

One TLB-Access takes 76 ns
NEUE ITERATION
2
40
Number of Pages 2
Number of Iterations 40
tlbAccessTime: 7057

One TLB-Access takes 514 ns
NEUE ITERATION
4
80
Number of Pages 4
Number of Iterations 80
tlbAccessTime: 24643

One TLB-Access takes 951 ns
NEUE ITERATION
8
160
Number of Pages 8
Number of Iterations 160
tlbAccessTime: 68272

One TLB-Access takes 1053 ns
NEUE ITERATION
16
320
Number of Pages 16
Number of Iterations 320
tlbAccessTime: 255804

One TLB-Access takes 1684 ns
NEUE ITERATION
32
640
Number of Pages 32
Number of Iterations 640
tlbAccessTime: 938176

One TLB-Access takes 2538 ns
NEUE ITERATION
64
1280
Number of Pages 64
Number of Iterations 1280
tlbAccessTime: 4239544

One TLB-Access takes 5621 ns
NEUE ITERATION
128
2560
Number of Pages 128
Number of Iterations 2560
tlbAccessTime: 19847807

One TLB-Access takes 10353 ns
NEUE ITERATION
256
5120
Number of Pages 256
Number of Iterations 5120
tlbAccessTime: 77871420

One TLB-Access takes 18097 ns
NEUE ITERATION
512
10240
Number of Pages 512
Number of Iterations 10240
tlbAccessTime: 308554474

One TLB-Access takes 33249 ns



Aufgabe 4:

- TODO


Aufgabe 5:


- VOLATILE ??




Aufgabe 6:

- Man kann mit "set_schedaffinity" einen Prozess nur auf einem CPU laufen lassen
- Mit mehreren CPU´s wird über die anderen CPUs gewwechselt und somit kommt Threading vor, was es im ganzen Schneller ablaufen lässt
- Wobei es sich nicht soviel ändert

- Möglicherweise, muss man mit einem CPU auch kein Contextwechselt/IO vornehmen

an851goe@ct-bsys-ws20-18:~/z-drive/BSYS2020/Chapter19$ ./tlb.sh 1 20
NEUE ITERATION
1
20
Number of Pages 1
Number of Iterations 20
tlbAccessTime: 889

One TLB-Access takes 67 ns
NEUE ITERATION
2
40
Number of Pages 2
Number of Iterations 40
tlbAccessTime: 7669

One TLB-Access takes 580 ns
NEUE ITERATION
4
80
Number of Pages 4
Number of Iterations 80
tlbAccessTime: 24104

One TLB-Access takes 920 ns
NEUE ITERATION
8
160
Number of Pages 8
Number of Iterations 160
tlbAccessTime: 67292

One TLB-Access takes 1022 ns
NEUE ITERATION
16
320
Number of Pages 16
Number of Iterations 320
tlbAccessTime: 253773

One TLB-Access takes 1651 ns
NEUE ITERATION
32
640
Number of Pages 32
Number of Iterations 640
tlbAccessTime: 989888

One TLB-Access takes 3164 ns
NEUE ITERATION
64
1280
Number of Pages 64
Number of Iterations 1280
tlbAccessTime: 4617200

One TLB-Access takes 5873 ns
NEUE ITERATION
128
2560
Number of Pages 128
Number of Iterations 2560
tlbAccessTime: 19484366

One TLB-Access takes 10241 ns
NEUE ITERATION
256
5120
Number of Pages 256
Number of Iterations 5120
tlbAccessTime: 77647341

One TLB-Access takes 17987 ns
NEUE ITERATION
512
10240
Number of Pages 512
Number of Iterations 10240
tlbAccessTime: 308925272

One TLB-Access takes 34005 ns



Aufgabe 7:

- Malloc / Calloc
- Calloc initilisiert alle Einträge mit Nullen
- Es gibt keine großen Unterschiede, jedoch braucht es erheblich länger, wenn die Nummer der Pages und Iterationen immer länger werden


an851goe@ct-bsys-ws20-18:~/z-drive/BSYS2020/Chapter19$ ./tlb.sh 1 20
NEUE ITERATION
1
20
Number of Pages 1
Number of Iterations 20
tlbAccessTime: 947

One TLB-Access takes 74 ns
NEUE ITERATION
2
40
Number of Pages 2
Number of Iterations 40
tlbAccessTime: 7926

One TLB-Access takes 604 ns
NEUE ITERATION
4
80
Number of Pages 4
Number of Iterations 80
tlbAccessTime: 23696

One TLB-Access takes 909 ns
NEUE ITERATION
8
160
Number of Pages 8
Number of Iterations 160
tlbAccessTime: 71454

One TLB-Access takes 1170 ns
NEUE ITERATION
16
320
Number of Pages 16
Number of Iterations 320
tlbAccessTime: 240856

One TLB-Access takes 1504 ns
NEUE ITERATION
32
640
Number of Pages 32
Number of Iterations 640
tlbAccessTime: 873774

One TLB-Access takes 1822 ns
NEUE ITERATION
64
1280
Number of Pages 64
Number of Iterations 1280
tlbAccessTime: 4580670

One TLB-Access takes 5383 ns
NEUE ITERATION
128
2560
Number of Pages 128
Number of Iterations 2560
tlbAccessTime: 20507903

One TLB-Access takes 12334 ns
NEUE ITERATION
256
5120
Number of Pages 256
Number of Iterations 5120
tlbAccessTime: 78292040

One TLB-Access takes 17827 ns
NEUE ITERATION
512
10240
Number of Pages 512
Number of Iterations 10240
tlbAccessTime: 719354206

One TLB-Access takes 73115 ns